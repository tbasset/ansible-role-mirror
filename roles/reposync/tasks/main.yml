---

- name: Make sure yum config directory exists
  ansible.builtin.file:
    path: '{{ yum_conf | dirname }}'
    state: directory

- name: Create yum configuration file
  ansible.builtin.template:
    src: yum.conf.j2
    dest: '{{ yum_conf }}'

- name: Check if comps.xml exists
  ansible.builtin.stat:
    path: '{{ repo }}/comps.xml'
  register: comps_xml_stat
  vars:
    repo: '{{ target }}/{{ item.name }}'
  loop: '{{ repos }}'

- name: Run createrepo
  ansible.builtin.command:
    cmd: >
      createrepo
      --update
      {{ "-g" if comps_xml_stat.stat.exists else "" }}
      {{ repo + "/comps.xml" if comps_xml_stat.stat.exists else ""}}
      {{ repo }}
  vars:
    repo: '{{ target }}/{{ item.name }}'
  loop: '{{ repos }}'

- name: Run reposync
  ansible.builtin.command:
    # My old sync script had --doanloadcomps and --download-metadata
    # hard-coded - not making them variables until I need to turn them
    # off.
    cmd: >
      /usr/bin/reposync
      --arch={{ architecture }}
      --config={{ yum_conf }}
      --download_path={{ target }}
      {{ "--delete" if delete else "" }}
      {{ "--newest-only" if newest_only else "" }}
      --downloadcomps
      --download-metadata

- name: Check if comps.xml exists
  ansible.builtin.stat:
    path: '{{ repo }}/comps.xml'
  register: comps_xml_stat
  vars:
    repo: '{{ target }}/{{ item.name }}'
  loop: '{{ repos }}'

- name: Run createrepo
  ansible.builtin.command:
    cmd: >
      createrepo
      --update
      {{ "-g" if comps_xml_stat.stat.exists else "" }}
      {{ repo + "/comps.xml" if comps_xml_stat.stat.exists else ""}}
      {{ repo }}
  vars:
    repo: '{{ target }}/{{ item.name }}'
  loop: '{{ repos }}'
