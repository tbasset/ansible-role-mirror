---

- name: Make target directory
  become: true
  ansible.builtin.file:
    path: "{{ target }}"
    state: directory

- name: Make keys directory
  become: true
  ansible.builtin.file:
    path: "{{ keyring_directory }}/keys.d"
    state: directory
  when: keys is defined

- name: Download key {{ key.name }}
  become: true
  ansible.builtin.get_url:
    dest: "{{ keyring_directory }}/keys.d/{{ key.name }}.key"
    url: "{{ key.url }}"
    checksum: "{{ key.checksum| default('') }}"
  loop: "{{ keys | default([]) }}"
  loop_control:
    loop_var: key

- name: Delete any extra keys
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_fileglob: "{{ keyring_directory }}/keys.d/*.key"
  when: item.split('/')[-1].split('.')[0] not in keys | map(attribute='name') | list

- name: Delete old keyring
  become: true
  ansible.builtin.file:
    path: "{{ keyring_directory }}/keyring.gpg"
    state: absent

- name: Make keyring
  become: true
  ansible.builtin.shell: gpg --no-default-keyring --keyring {{ keyring_directory }}/keyring.gpg --import {{ item }}
  with_fileglob: "{{ keyring_directory }}/keys.d/*.key"

- name: Run debmirror
  become: true
  vars:
    argv_start:
      - debmirror
      - --verbose
      - --precleanup # Remove old files before download - makes mirror inconsistent until debmirror finishes but copes better with limited space
      - --dist={{ ','.join(suites) }}
      - --section={{ ','.join(components) }}
      - --arch={{ ','.join(architectures) }}
      - --method={{ method }}
      - --rsync-extra={{ ','.join(rsync_extras) }}
      - --host={{ source.host }}
      - --root={{ source.root }}
      - --keyring={{ keyring_directory }}/keyring.gpg
      - --slow-cpu
      - --i18n
    argv_end:
      - "{{ extra_options | join (' ') }}"
      - "{{ target }}"
  ansible.builtin.command:
    argv: "{{ argv_start + argv_end }}"

#      - --postcleanup # Remove old files after download - makes mirror consistent while debmirror runs but consume more space
